<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.ase</groupId>
    <artifactId>To-Do-List</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>To-Do-List</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <junit.jupiter.version>5.11.0-M2</junit.jupiter.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- If specified here, the MojoHaus Versions Maven Plugin can be used to update the version of the dependency.
                     https://www.mojohaus.org/versions/versions-maven-plugin/use-latest-versions-mojo.html -->
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_core</artifactId>
                <version>2.28.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>33.2.1-jre</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>5.12.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- define required minimum version of Maven, see https://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.6.3</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- generate Checkstyle reports, see https://maven.apache.org/plugins/maven-checkstyle-plugin/ -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>

                    <!-- Use the Checkstyle configuration for the Google Java Style.
                         https://maven.apache.org/plugins/maven-checkstyle-plugin/check-mojo.html#configLocation -->
                    <configLocation>google_checks.xml</configLocation>

                    <!-- The Checkstyle configuration for the Google Java Style sets the severity of
                         violations to `warning`.
                         However, the lowest severity level that is considered a violation is `error`
                         by default.
                         Therefore, we need to set the severity level to `warning` to make the build
                         fail for Google Java Style violations.

                         - https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/google_checks.xml#:~:text=severity
                         - https://maven.apache.org/plugins/maven-checkstyle-plugin/check-mojo.html#violationSeverity
                         - https://stackoverflow.com/a/52006315/66981
                    -->
                    <violationSeverity>warning</violationSeverity>

                    <!-- Include test sources in addition to the main sources.
                         https://maven.apache.org/plugins/maven-checkstyle-plugin/check-mojo.html#includeTestSourceDirectory
                    -->
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>

                </configuration>
                <executions>
                    <execution>
                        <!-- We bind the checkstyle plugin to the verify phase, which allows the javac compiler to flag invalid
                             code before checkstyle. If it were bound to the earlier validate phase, it would check the code
                             before compiling it. If the code would be invalid, the parsing errors reported by checkstyle may be
                             different than what would be expected from the javac compiler.
                             See: Checking for Violations as Part of the Build
                                  at https://maven.apache.org/plugins/maven-checkstyle-plugin/usage.html#checking-for-violations-as-part-of-the-build -->
                        <id>verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- add Error Prone checks to Java compilation, see https://errorprone.info/docs/installation -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                    <!-- The default configuration for the build process is to continue regardless of
                         compilation warnings. However, to ensure that no potential bugs are missed, it is
                         recommended that the build configuration be set to fail on compilation warnings: -->
                    <failOnWarning>false</failOnWarning>
                    <compilerArgs>
                        <arg>-XDcompilePolicy=simple</arg>
                        <arg>-Xplugin:ErrorProne</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_core</artifactId>
                            <version>2.28.0</version>
                            <!-- If not specified here, the version is taken from dependency management (see above).
                                 https://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html#annotationProcessorPaths -->
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.3.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M7</version>
                    <configuration>
                        <includes>
                            <include>**/*Test.java</include>
                        </includes>
                        <testSourceDirectory>src/test/java</testSourceDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.4.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.13.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>4.0.0-M15</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.5.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>